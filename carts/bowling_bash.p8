pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--setup and update--
p={
  x=100,
  y=128,
  xv=0,
  yv=0,
  chargex=128,
  chargey=128,
  charging=0,
  hp=500,
  cd=0,
  stun=0,
}//keepObject
bumpers={}
shake={x=0,y=0,dur=0}//keepObject
slots={-1,-1,-1,-1}
menu=0
part={}--part=partices
cam={x=0,y=0}//keepObject
pins={}
function shak(x2,y2,dur2)
  shake.x=x2
  shake.y=y2
  shake.dur=dur2
end

function create_bumper(x2,y2)
		add(bumpers,{x=x2,y=y2,cd=0
		})
end

function round(val)
  if val>0.5 then
    return flr(val)+1
  else
    return flr(val)
  end
end
function pal_reset()
  pal(1,1)
  pal(2,2)
  pal(3,3)
  pal(4,4)
  pal(5,5)
  pal(6,6)
  pal(7,7)
  pal(8,8)
  pal(9,9)
  pal(10,10)
  pal(11,11)
  pal(12,12)
  pal(13,13)
  pal(14,14)
  pal(15,15)
end
function pall(i1,i2,i3,i4,i5,i6,i7,i8,i9,i10,i11,i12,i13,i14,i15)
		pal(1,i1) 
		pal(2,i2) 
		pal(3,i3) 
		pal(4,i4)
  pal(5,i5) 
  pal(6,i6) 
  pal(7,i7) 
  pal(8,i8)
  pal(9,i9) 
  pal(10,i10) 
  pal(11,i11)
  pal(12,i12) 
  pal(13,i13) 
  pal(14,i14) 
  pal(15,i15)
end
function dist(x1,y1,z1,x2,y2,z2)
		return sqrt(((x1-x2)^2)+((y1-y2)^2)+((z1-z2)^2))
end
function rect_collide(x1,y1,sx1,sy1,x2,y2,sx2,sy2)

  return (x1>x2-sx2 and x1-sx1<x2 and y1>y2-sy2 and y1-sy1<y2) 
end
function includes(table,val)
  for i=1,count(table) do
    if(table[i]==val) return true
  end
  return false
end
function sort(obj,item)

end

function _init()
  for i=1,2 do
    create_pin(rnd(200)+20,20+rnd(200),1)
		end
		create_pin(rnd(200)+20,20+rnd(200),2)
		create_pin(rnd(200)+20,20+rnd(200),3)
		for i=1,4 do
				create_bumper(rnd(200)+20,20+rnd(200))
		end
		create_pin(rnd(200)+20,20+rnd(200),4)
		
end

function _update60()
		sort(pins)
		if menu==0 then
		  player_logic()
		    
		  if (rnd(2)>1) and (abs(p.xv)+abs(p.yv)>5) then
		    create_part(p.x,p.y,5,1)
		  end
		  if (abs(p.xv)+abs(p.yv)>11) then
		    create_part(p.x,p.y,8,1)
		    create_part(p.x,p.y,7,1)
		  elseif (abs(p.xv)+abs(p.yv)>9.5) then
		    create_part(p.x,p.y,3,1)
		  elseif (abs(p.xv)+abs(p.yv)>7) then
		    create_part(p.x,p.y,6,1) 
		  elseif (abs(p.xv)+abs(p.yv)>5) then
		    create_part(p.x,p.y,1,1) 
		  elseif (abs(p.xv)+abs(p.yv)>3.5) then
		    create_part(p.x,p.y,2,1) 
		  end
		  
		  
		  
		  
		  for i=1,count(bumpers) do bumper_logic(i) end
		  to_delete={}
		  for i=1,count(pins) do pin_logic(i) end
				for i=1,count(to_delete) do
						if to_delete[i] then
								deli(pins,i)
						end
				end
				to_delete={}--partices
				for i=1,count(part) do part_logic(i) end
		  for i=1,count(to_delete) do
						if to_delete[i] then
								deli(part,i)
						end
				end
		end
		cam.x+=(12*min(p.xv,12)+p.x-cam.x-64)/7
		  cam.y+=(12*min(p.yv,12)+p.y-cam.y-64)/7
		  
		if cam.x>128 then cam.x=128 end
		if cam.x<0 then cam.x=0 end
		if cam.y>128 then cam.y=128 end
		if cam.y<0 then cam.y=0 end

end


-->8
--pin logic--
function create_pin(x2,y2,ty2)
		add(pins,{
		max_hp=pin_data[ty2].hp,
		hp=pin_data[ty2].hp,
		iframe=0,
		x=x2,y=y2,
		ty=ty2,
		xv=0,yv=0,z=0,zv=0,
		cd=20+rnd(220)
		})//keepObject
end

function pin_logic(i)
		if (rect_collide(p.x,p.y,16,16,pins[i].x+8,pins[i].y+8,16,16)) and pins[i].iframe==0 then
			   --hurt on collide--
			 local dir=atan2(pins[i].x-p.x,pins[i].y-p.y)
		  if (rnd(1)>0.5) then dir+=0.25 else dir-=0.25 end
		  
		  local mult=1
		  if (includes(slots,2) and pins[i].hp==500) then mult*=2.5 end
		  if (includes(slots,4)) then mult*=1.2 end
		  
		  pins[i].xv=(abs(p.xv)+0.5*abs(pins[i].xv)+1)*cos(dir)
		  pins[i].yv=(abs(p.yv)+0.5*abs(pins[i].yv)+1)*sin(dir)
		  pins[i].iframe=5
  		pins[i].zv=-0.75*abs(p.xv+p.yv)
			 pins[i].hp-=10*mult*abs(p.xv+p.yv)
				local strike=0.1
				if (includes(slots,1)) then strike*=0.5 end
				p.xv*=1-strike
				p.yv*=1-strike
		 	create_part(pins[i].x,pins[i].y,4,3)
		  if (pins[i].hp<=0) then--killed via collision
				  shak(2,2,5)
			   create_part(pins[i].x,pins[i].y,4,6)
		  end
		end
		pins[i].x+=pins[i].xv
		pins[i].y+=pins[i].yv
		pins[i].z+=pins[i].zv

		if pins[i].z>0 then
		 
		  pins[i].z=0
		  pins[i].zv=0
		  pins[i].xv*=0.5
		  pins[i].yv*=0.5
		else
		  if pins[i].z<-80 then
		    pins[i].z=-80
		    pins[i].zv=0
		  else
		    pins[i].zv+=0.25
		  end
		end
		
		if pins[i].cd<1 then
				pins[i].cd=pin_data[pins[i].ty].speed
				pins[i].zv=-2
				local dir=atan2(p.x-8-pins[i].x,p.y-8-pins[i].y)
		  
		  pins[i].xv+=1.5*cos(dir)
		  pins[i].yv+=1.5*sin(dir)
		
		else
				pins[i].cd-=1
		end
		if pins[i].iframe>0 then
				pins[i].iframe-=1
		end
		
		if pins[i].x>232 then pins[i].x=232
		 pins[i].xv*=-0.5 end
  if pins[i].x<24 then pins[i].x=24 
  pins[i].xv*=-0.5 end
  if pins[i].y>232 then pins[i].y=232 
  pins[i].yv*=-0.5 end
  if pins[i].y<24 then pins[i].y=24 
  pins[i].yv*=-0.5 end
		
		pins[i].xv*=0.975
		pins[i].yv*=0.975
		add(to_delete,pins[i].hp<=0)
		if pins[i].hp<=0 and includes(slots,3) then p.hp=min(500,p.hp+25) end

end
-->8
--player logic--
function player_logic()
--basic movement--

  local move⬅️➡️=false
		local move⬆️⬇️=false
		local vector_x=0
		local vector_y=0
		if btn(➡️) then vector_x=1 
		move⬅️➡️=true end
		if btn(⬅️) then vector_x=-1 
		move⬅️➡️=true end
  if btn(⬇️) then vector_y=1 
  move⬆️⬇️=true end
		if btn(⬆️) then vector_y=-1 
		move⬆️⬇️=true end
		
		
		if move⬆️⬇️ and move⬅️➡️ then
		  vector_x*=0.6
		  vector_y*=0.6
		  --0.70710678118
		end
		if (includes(slots,17)) then--jetball :)
		  vector_x*=2
		  vector_y*=2
		end
		if (p.stun>0) then
				vect0r_x=0
				vector_y=0
				p.stun-=1
		end		
		
		p.xv+=vector_x*0.2
		p.yv+=vector_y*0.2
		
		--charge resistance--
		if (p.charging>0) then
		  local strength=dist(p.x,p.y,0,p.chargex,p.chargey,0)
		  local dir=atan2(p.chargex-p.x,p.chargey-p.y)
		  p.xv+=0.0075*strength*cos(dir)
		  p.yv+=0.0075*strength*sin(dir)	
		end
				
--charge attack--
		if (btn(❎)) then
				if p.charging<9 then
				--start charge--
						if p.charging==0 then
								p.chargex=p.x
								p.chargey=p.y
						end
						p.charging+=1					
				end
		else
				if (p.charging>0) then
				  local strength=dist(p.x,p.y,0,p.chargex,p.chargey,0)
		    local dir=atan2(p.chargex-p.x,p.chargey-p.y)
		    p.xv+=0.04*strength*cos(dir)
		    p.yv+=0.04*strength*sin(dir)
				end
				p.charging=0
		end	
		
		
		
		p.x+=p.xv
		p.y+=p.yv
	
		
		local rebound=-0.625
		if (includes(slots,0)) then rebound*=1.5 end
		if p.x>232 then shak(abs(p.xv)/2,abs(p.yv)/2,10) 
		p.x=232 
		p.xv*=rebound end
  if p.x<24 then shak(abs(p.xv)/2,abs(p.yv)/2,10) 
  p.x=24 
  p.xv*=rebound end
  if p.y>232 then shak(abs(p.xv)/2,abs(p.yv)/2,10) 
  p.y=232 
  p.yv*=rebound end
  if p.y<24 then shak(abs(p.xv)/2,abs(p.yv)/2,10) 
  p.y=24 
  p.yv*=rebound end
		
		if p.stun<=0 then
		  p.xv*=0.96
		  p.yv*=0.96
		end
		
end
-->8
--particles--

function create_part(x2,y2,ty2,cnt)
  for i=1,cnt do
    local dir2=part_data[ty2].dir+rnd(part_data[ty2].dir_rnd)
		  local speed2=part_data[ty2].speed+rnd(part_data[ty2].speed_rnd)
		  local dur2=part_data[ty2].dur+rnd(part_data[ty2].dur)
		  add(part,{
		  x=x2,y=y2,ty=ty2,
		  xv=speed2*cos(dir2),
		  yv=speed2*sin(dir2),
		  dur=dur2,
		  ma=dur2,
		  })//keepObject
		end	
end

function part_logic(i)
  local pa=part[i]
  pa.x+=pa.xv
  pa.y+=pa.yv
  pa.xv+=part_data[pa.ty].gx
  pa.yv+=part_data[pa.ty].gy
  pa.dur-=1

  add(to_delete,pa.dur<1)

end

-->8
--draw--
function _draw()
		cls()
		map(0,0)
		local x=(rnd(10)-5)/10
		local y=(rnd(10)-5)/10
		
		camera(cam.x+(x*shake.x),cam.y+(y*shake.y))
		
		shake.dur-=1
		if (shake.dur<1) then
		  shake.dur=0
		  shake.x=0
		  shake.y=0
		end
		
		for i=1,count(pins) do
				if (pin_data[pins[i].ty].large) then
				  ovalfill(pins[i].x+1,pins[i].y+9,pins[i].x+14,pins[i].y+18,4)
				else
				  ovalfill(pins[i].x+3,pins[i].y+9,pins[i].x+12,pins[i].y+16,4)
				end
		end
		spr(70,p.x-8,p.y-3,2,2)
		
		for i=1,count(bumpers) do
				local art=106
				if bumpers[i].cd>0 then art=110 end
				if bumpers[i].cd>=10 then art=108 end
		  spr(art,bumpers[i].x-8,bumpers[i].y-8,2,2)
		end
		for i=1,count(pins) do
				local art=pin_data[pins[i].ty].idle
				
				pal(7,pin_data[pins[i].ty].white)
				pal(6,pin_data[pins[i].ty].gray)
				pal(13,pin_data[pins[i].ty].gray2)
				pal(2,pin_data[pins[i].ty].dark_red)
				pal(8,pin_data[pins[i].ty].red)
				if (pin_data[pins[i].ty].large) then
				  spr(39,pins[i].x,pins[i].y+pins[i].z,2,2)
				  spr(7,pins[i].x,pins[i].y-13+pins[i].z,2,2)
				  
				else
				  spr(3,pins[i].x,pins[i].y+pins[i].z,2,2)
				end
		  pal_reset()
				//print(pins[i].hp,pins[i].x,pins[i].y+30,1)
		end
		for i=1,count(pins) do--heathbars
				local y_off=0
				if (pin_data[pins[i].ty].large) then y_off-=13 end
				local art = (flr(14*pins[i].hp/pin_data[pins[i].ty].hp))
	   spr(144,pins[i].x,y_off+pins[i].y-8+pins[i].z,2,1)
	   rectfill(pins[i].x+1,y_off+pins[i].y-5+pins[i].z,pins[i].x+art,y_off+pins[i].y+2-8+pins[i].z,11)
	   rectfill(pins[i].x+1,y_off+pins[i].y-4+pins[i].z,pins[i].x+art,y_off+pins[i].y+2-6+pins[i].z,3)
		end
		--charge lines
		if p.charging>0 then
		  local dir=atan2(p.x-p.chargex,p.y-p.chargey)
		  
				line(p.x,p.y,p.chargex,p.chargey,2)
    spr(180,p.chargex-4,p.chargey-4)
		end
		
		
		--particles--------------
		for i=1,count(part) do
		  function range(start,en,dur,ma)
		    return (start*(dur/ma))+en*((ma-dur)/ma)
		  end
    local colr=round(range(1,count(part_data[part[i].ty].clr),
    part[i].dur,part[i].ma))
    circfill(
		    part[i].x,part[i].y,
		    range(part_data[part[i].ty].size,part_data[part[i].ty].end_size,part[i].dur,part[i].ma),
		    part_data[part[i].ty].clr[colr-1])
		end
		
		spr(1,p.x-8,p.y-8,2,2)
		
		local art=1
		if abs(p.xv)+abs(p.yv)>11 then
		  ovalfill(p.x-8,p.y-8,p.x+7,p.y+7,7)
		elseif abs(p.xv)+abs(p.yv)>9.5 then
		  spr(11,p.x-8,p.y-8,2,2)
		elseif abs(p.xv)+abs(p.yv)>7 then
		  spr(9,p.x-8,p.y-8,2,2)	  
		elseif abs(p.xv)+abs(p.yv)>5 then
		  oval(p.x-8,p.y-8,p.x+7,p.y+7,10)
		elseif abs(p.xv)+abs(p.yv)>3.5 then
		  oval(p.x-8,p.y-8,p.x+7,p.y+7,7)
		end
		
		
		

		
--bowling ball holes --
		if (cos((p.x+3-7)/30)>0) and (cos((p.y-3-7)/30)>0) then
		  spr(165,-4+p.x+sin((p.x+3-7)/30)*-5,-4+p.y+sin((p.y-3-7)/30)*-5)
		end
		if (cos((p.x-3-7)/30)>0) and (cos((p.y-3-7)/30)>0) then
		  spr(165,-4+p.x+sin((p.x-3-7)/30)*-5,-4+p.y+sin((p.y-3-7)/30)*-5)
		end
		if (cos((p.x-7)/30)>0) and (cos((p.y-7)/30)>0) then
		  spr(165, -4+p.x+sin((p.x-7)/30)*-5,-4+p.y+sin((p.y-7)/30)*-5)
		end	

		
		--player healthbar--
		 

	 spr(128,p.x-8,p.y-18,2,1)
	 local art = (flr(14*p.hp/500))
	 rectfill(p.x-7,p.y-15,p.x+art-8,p.y+2-18,11)
	 rectfill(p.x-7,p.y-14,p.x+art-8,p.y+2-16,3)
  local art = (flr(14*(100-p.cd)/100))
  rectfill(p.x-7,p.y-12,p.x+art-8,p.y+2-14,9)
  
	 
	 spr(98,p.x-8,p.y-28+2*round(sin(time()/0.75)),2,1)
	 
	 --menu--
	 
		if (menu==1) then
		  local x=cam.x
		  local y=cam.y		  
		  spr(224,32+x,64+y,2,2)
	   spr(212,36+x,76+y)
	  
	 
		end
	 
end

-->8
--data--
pin_data={
{
  name="pin",
  hp=100,
  damage=5,
  speed=60,
  white=7,
  gray=6,
  gray2=13,
  red=8,
  dark_red=2,
  large=false,
},//keepObject
{
  name="red pin",
  hp=250,
  damage=7.5,
  speed=80,
  white=14,
  gray=8,
  gray2=2,
  red=7,
  dark_red=13,
  large=false,
},//keepObject
{
  name="gold pin",
  hp=200,
  damage=10,
  speed=30,
  white=10,
  gray=9,
  gray2=4,
  red=11,
  dark_red=3,
  large=false,
},//keepObject
{
  name="mega pin",
  hp=500,
  damage=5,
  speed=120,
  white=7,
  gray=6,
  gray2=13,
  red=8,
  dark_red=2,
  large=true,
},//keepObject
}
upgrade_data={
{--1
  name="rebound",
  desc="bouncing maintans nearly all momentum",
  art=192,
},//keepObject
{--2
  name="strike",
  desc="speed decrease upon colliding with pins -50%",
  art=194,
},//keepObject
{--3
  name="first bash",
  desc="250% damage on the first hit",
  art=196,
},//keepObject
{--4
  name="",
  desc="",
  art=198,
},//keepObject
{--5
  name="16 lbs",
  desc="overall damage +15%",
  art=200,
},//keepObject
{--6
  name="blaze",
  desc="damage is briefly boosted after bouncing",
  art=202,
},//keepObject
{--7
  name="unstoppable",
  desc="maximum rolling speed increased",
  art=204,
},//keepObject
{--8
  name="wave charge",
  desc="wave attack recharges much faster",
  art=206,
},//keepObject
{--9
  name="interval",
  desc="every 10 seconds, four 5 seconds, damage +40%",
  art=224,
},//keepObject
{--10
  name="gun",
  desc="gains a weak mounted gun",
  art=226,
},//keepObject
{--11
  name="ball master",
  desc="gain a set of 2 orbiting balls",
  art=228,
},//keepObject
{--12
  name="uppercut",
  desc="knockback dealt to pins with wave is increased",
  art=230,
},//keepObject
{--13
  name="aura",
  desc="gain an aura that hurts pins sightly in a large area",
  art=232,
},//keepObject
{--14
  name="high score",
  desc="ending points increased by 25%",
  art=234,
},//keepObject
{--15
  name="piercing wave",
  desc="wave inflicts a slight bit of damage",
  art=134,
},//keepObject
{--16
  name="snowball cannon",
  desc="periodically fire a snowball that stuns",
  art=136,
},
{--17
  name="jetball",
  desc="greatly increases your maximum speed",
  art=138,
},//keepObject
{--18
  name="triple wave",
  desc="three waves are unleashed by using the wave attack",
  art=140,
},//keepObject
{--19
  name="cluster blast",
  desc="dealing damage to pins explodes",
  art=142,
},//keepObject
{--20
  name="elastic",
  desc="the grapple adds more speed than befoure",
  art=166,
},//keepObject
{--21
  name="godspeed",
  desc="speed tiers are easier, and affects damage and adds a new tier",
  art=168,
},//keepObject
{--22
  name="turkey",
  desc="damage increases by 100% four one attack after detroying a pin",
  art=170,
},//keepObject
{--23
  name="perfect turn",
  desc="changing directions is much quicker",
  art=172,
},//keepObject
{--24
  name="hacks!",
  desc="stat bonuses in all areas",
  art=174,
},//keepObject
}
part_data={
{--yellow trail--1
		dur=8,
		dur_rnd=2,
		clr={10,10,9,8,8},
		size=7,
		end_size=4,
		dir=0,
		dir_rnd=0,
		speed=0,	
		speed_rnd=0,
		gx=0,
		gy=0,
},//keepObject
{--white trail--2
		dur=5,
		dur_rnd=2,
		clr={7,7,7,6,13,13},
		size=8,
		end_size=6,
		dir=0,
		dir_rnd=0,
		speed=0,	
		speed_rnd=0,
		gx=0,
		gy=0,
},//keepObject
{--blue/green trail--3
		dur=10,
		dur_rnd=4,
		clr={7,7,11,12,13,1,1},
		size=7,
		end_size=4,
		dir=0,
		dir_rnd=0,
		speed=0,	
		speed_rnd=0,
		gx=0,
		gy=0,
},//keepObject
{--damage--4
		dur=20,
		dur_rnd=4,
		clr={1,1},
		size=3,
		end_size=1,
		dir=0,
		dir_rnd=0.33,
		speed=0.5,	
		speed_rnd=0.5,
		gx=0,
		gy=0.05,
},//keepObject
{--smoke--5
		dur=16,
		dur_rnd=10,
		clr={1,1},
		size=5,
		end_size=1,
		dir=0,
		dir_rnd=0.5,
		speed=0.25,	
		speed_rnd=0.2,
		gx=0,
		gy=-0.1,
},//keepObject
{--super fire trail--6
		dur=10,
		dur_rnd=4,
		clr={7,7,10,15,14,14,13,2,1,1},
		size=7,
		end_size=3,
		dir=0,
		dir_rnd=0,
		speed=0,	
		speed_rnd=0,
		gx=0,
		gy=0,
},//keepObject
{--godspeed--7
		dur=20,
		dur_rnd=6,
		clr={7,7,7,14,14,10,11,11},
		size=5,
		end_size=2,
		dir=0,
		dir_rnd=1,
		speed=0.6,	
		speed_rnd=0.1,
		gx=0,
		gy=0,
},
{--godspeed2--8
		dur=20,
		dur_rnd=6,
		clr={14,8,9,10,11,3,12,13,1,1},
		size=7,
		end_size=3,
		dir=0,
		dir_rnd=1,
		speed=0.6,	
		speed_rnd=0.1,
		gx=0,
		gy=0,
},//keepObject
}
-->8
--bumper logic--
function bumper_logic(i)
		if bumpers[i].cd>0 then
				bumpers[i].cd-=1
		end
		if bumpers[i].cd<=0 and (rect_collide(p.x,p.y,16,16,bumpers[i].x,bumpers[i].y,16,16)) then
			   --bounce on collide--
			 local dir=atan2(bumpers[i].x-p.x,bumpers[i].y-p.y)
				p.xv*=-1.2
				p.yv*=-1.2
				
				p.xv-=cos(dir)
				p.yv-=sin(dir)
				p.stun+=10
				bumpers[i].cd=20
				shak(abs(p.xv)/2,abs(p.yv)/2,30)
		end
end
//{}
__gfx__
00000000000005555550000000000005500000000000000000000000000000000000000000000a7777a0000000000c7777c00000000005555550000000000000
000000000005528888255000000000577500000000000000000000000000000000000000000ea777777ae000000bc777777cb00000055dccccd5500000000000
00700700005288ee8ee8850000000567765000000000000000000000000000555500000000e7700000077e0000b7700000077b00005dcc77c77cc50000000000
000770000528eeeeeeee82500000057777500000000000000000000000000566665000000e700000000007e00b700000000007b005dc77777777cd5000000000
00077000058eeee8888882500000057777500000000000000000000000005677776500000a000000000000a00c000000000000c005c7777ccccccd5000000000
00700700528e888888888821000001677610000000000000000000000000567777650000a70000000000007ac70000000000007c5dc7ccccccccccd100000000
000000005288888888888821000000288200000000000000000000000005d777777d5000700000000000000770000000000000075dccccccccccccd100000000
0000000052888888888888210000556666550000000000000000000000057777777750007a000000000000a77c000000000000c75dccccccccccccd100000000
0011110052888888888888210000567777650000000000000000000000056777777650007a000000000000a77c000000000000c75dccccccccccccd100000000
018ee81052888888888888210005d777777d5000000000000000000000056877778650007e000000000000e77b000000000000b75dccccccccccccd100000000
18eeee81522888888888822100056677776650000000000000000000000568e77e865000aea0000000000aeacbc0000000000cbc5ddccccccccccdd100000000
1888e88101288888888822100005d677776d500000000000000000000005dd6776dd50000aa0000000000aa00cc0000000000cc001dcccccccccdd1000000000
1288882101228888882222100005d677776d500000000000000000000001dd6666dd10000eea00000000aee00bbc00000000cbb001ddccccccdddd1000000000
12888821001222222222210000001d6776d10000000000000000000000001dddddd1000000eeea0000aeee0000bbbc0000cbbb00001dddddddddd10000000000
012222100001122222211000000011666611000000000000000000000000122222210000000eaeeeeeeae000000bcbbbbbbcb00000011dddddd1100000000000
00111100000001111110000000000111111000000000000000000000000001288210000000000a7777a0000000000c7777c00000000001111110000000000000
0000055555500000000000000000000000000000000000077000000000001d2222d1000000000777777000000000000000000000000000000000000000000000
000552eeee2550000000000000000000000000000000007777000000000016666661000000077777777770000000000000000000000000000000000000000000
0052eeffeffee5000000000000000000000000000000077777700000000166777766100000777777777777000000000000000000000000000000000000000000
052effffffffe2500000000000000000000000000000077777700000001677777777610007777777777777700000000000000000000000000000000000000000
05effffeeeeee2500000000000000055550000000000077777700000001777777777710007777777777777700000000000000000000000000000000000000000
52efeeeeeeeeee210000000000005567765500000000077777700000016777777777761077777777777777770000000000000000000000000000000000000000
52eeeeeeeeeeee210000000000056777777650000000007777000000016777777777761077777777777777770000000000000000000000000000000000000000
52eeeeeeeeeeee2100000000000011d66d1100000000777777770000016777777777761077777777777777770000000000000000000000000000000000000000
52eeeeeeeeeeee210000000000002288882200000000777777770000016777777777761077777777777777770000000000000000000000000000000000000000
52eeeeeeeeeeee21000000000055d777777d55000007777777777000016677777777661077777777777777770000000000000000000000000000000000000000
522eeeeeeeeee2210000000005dd67777776dd500007777777777000016677777777661077777777777777770000000000000000000000000000000000000000
012eeeeeeeee22100000000005d6777777776d500007777777777000016667777776661007777777777777700000000000000000000000000000000000000000
0122eeeeee2222100000000001d6777777776d100007777777777000001666777766610007777777777777700000000000000000000000000000000000000000
001222222222210000000000001d66777766d1000000777777770000001d66666666d10000777777777777000000000000000000000000000000000000000000
0001122222211000000000000001dd6776dd1000000077777777000000011dd66dd1100000077777777770000000000000000000000000000000000000000000
00000111111000000000000000001111111100000000077777700000000001111110000000000777777000000000000000000000000000000000000000000000
00000000000000004ffffffffffffff94ffffffffffffff900000000000000005555555555dddddd94949494299999995555555555dddddd5d6666666677777d
00000000000000004f4fffffffffff494ffffffffffffff900000000000000005dddddddd777777d4242424229299999ddddddddd777777d5d66666667777775
00000000000000004ffffffffffffff94ffffffffffffff900004444444400005d666666777777d5212121212999999966666666777777665d666666777777d5
00000000000000004ffffffffffffff94ffffffffffffff900044444444440005d666667777776d5121212124fffffff66666667777776665d666667777776d5
00000000000000004ffffffffffffff94ffffffffffffff904444444444444405d6666dddd7766d5111111114fffffff66666677777766665d666677777766d5
00000000000000004ffffffffffffff94ffffffffffffff904444444444444405d666d66775666d5121212124fffffff66666777777666665d666777777666d5
00000000000000004ffffffffffffff94ffffffffffffff944444444444444445d66d665667566d5111111114fffffff66667777776666665d667777776666d5
00000444444000004ffffffffffffff94ffffffffffffff944444444444444445d67d6755d6566d5101010104fffffff66677777766666665d677777766666d5
00044444444440002999999999999994299999999999999444444444444444445d77d755d76566d5111111119999999466777777666666665d777777666666d5
00044444444440004ffffffffffffff9299999999999999404444444444444405777d777d66566d51010101099999924677777766666666657777776666666d5
00000444444000004ffffffffffffff929999999999999940444444444444440d7777577665666d501010101999999947777776666666666d7777766666666d5
00000000000000004ffffffffffffff94ffffffffffffff90004444444444000d7777655556666dd00000000fffffff97777766666666667d7777666666666dd
00000000000000004ffffffffffffff94ffffffffffffff90000444444440000d77766666666667d00000000fffffff97777666666666677d77766666666667d
00000000000000004ffffffffffffff94ffffffffffffff90000000000000000d77666666666677d00000000fffffff97776666666666777d77666666666677d
00000000000000004ffffffffffffff94ffffffffffffff90000000000000000d7dddddddddd777d00000000fffffff977dddddddddd7777d76666666666777d
00000000000000004ffffffffffffff94ffffffffffffff90000000000000000d5555555555dddd500000000fffffff9d5555555555ddddddd6666666667777d
00d0000000000000000dddddddddd000000000000000000000000000000000000000000000000000000000000000000000000eeeeee000000000000000000000
0d7d00000550000000d7ffffffffed000000000000000000000000000000000000000000000000000000088888800000000eeaaaaaaee00000000eeeeee00000
0d65d50005d5d50000d77ffffffeed00000000000000000000000000000000000000000000000000000889999998800000eaa777777aae00000eeaaaaaaee000
0d7575d00d7575d0000177ffffee100000000000000000000000000000000000000000000000000000889aaaaaa988000eaa77777777aae000eea777777aee00
d67d7d6dd67d7d6d0000177ffee100000000000000000000000000000000000000000000000000000089aaddddaa98000ea777dddd777ae000ea77dddd77ae00
d677776dd677776d00000177ee100000000000000000000000000000000000000000000000000000089aad66775aa980ea777d66775777ae0ea77d6677577ae0
566666d0566666d000000017e1000000000000000000000000000000000000000000000000000000089ad6656675a980ea77d665667577ae0ea7d66566757ae0
055dd500055dd5000000000110000000000000000000000000000000000000000000000000000000089ad6755d65a980ea77d6755d6577ae0ea7d6755d657ae0
d11d1111dddd111d0000000000000000000000000000000000000000000000000000000000000000089ad755d765a980ea77d755d76577ae0ea7d755d7657ae0
dd1ddd1ddd1ddd1d0000000000000000000000000000000000000000000000000000000000000000089ad777d665a980ea77d777d66577ae0ea7d777d6657ae0
11d11111111111110000000000000000000000000000000000000000000000000000000000000000089aa577665aa980ea777577665777ae0ea7757766577ae0
d1dd1dddd1dd1ddd00000000000000000000000000000000000000000000000000000000000000000089aa5555aa98000ea7775555777ae000ea77555577ae00
1111ddddd1dddddd000000000000000000000000000000000000000000000000000000000000000000889aaaaaa988000eaa77777777aae000eea777777aee00
1dd11111111111110000000000000000000000000000000000000000000000000000000000000000000889999998800000eaa777777aae00000eeaaaaaaee000
91d1dd1dddd1dd1d00000000000000000000000000000000000000000000000000000000000000000000088888800000000eeaaaaaaee00000000eeeeee00000
f91ddd1ddd1ddd1d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000eeeeee000000000000000000000
0000000000000000000000000000000000000000000000000007dddddddd70000007dddddddd70000007aaaaaaaa70000007aaaaaaaa70000007aaaaaaaa7000
011111111111111000000000000000000000000000000000007dd111111dd700007dd117111dd700007aa111111aa700007aa111111aa700007aa111111aa700
12dddddddddddd2100000000000000000000000000000000007d11111111d700007d11777111d700007a11111111a700007a11111111a700007a11111111a700
12dddddddddddd210000000000000000000000000000000007dd11aaaa11dd7007dd11171111dd7007aa11111111aa7007aa11111111aa7007aa11177111aa70
12222222222222210000000000000000000000000000000007d1aa7777aa1d7007d1111111171d7007a1111111111a7007a1111111111a7007a1117777111a70
0111111111111110000000000000000000000000000000007d11a711117a11d77d111111111111d77d18888cc81111a77a111111111111a77a119867768111a7
1222222222222221000000000000000000000000000000007d1a71111117a1d77d111cc7777111d77d11188877bc11a77a111111111111a77a118967769811a7
011111111111111000000000000000000000000000000000d11a71111117a11dd1cccc777777111dd8888ccbbb77b11da11111111111111aa11188a88a98811a
000000000000000000000000000000000000000000000000511a71111117a1155111cc77777c111558ccb77777777b15911111111111111991111a6666a91119
011111111111111000000000000000000000000000000000651a71111117a156651ccc77777c1156658888cb77bb815649111111111111944918967777681194
12dddddddddddd21000000000000000000000000000000006511a711117a115665111c7777cc115665188cccbc81115649111111111111944911867777611194
12dddddddddddd21000000000000000000000000000000000651aa7777aa15600651ccc7ccc11560065118881111156004911111111119400491167777611940
122222222222222100000000000000000000000000000000065511aaaa1155600655111111115560065511111111556004991111111199400499116776119940
01111111111111100000000000000000000000000000000000651111111156000065117111115600006511111111540000491111111194000049111661119400
00000000000000000000000000000000000000000000000000655111111556000065511111155600006551111115540000499111111994000049911111199400
00000000000000000000000000000000000000000000000000065555555560000006555555556000000655555555400000049999999940000004999999994000
aaaa99944999aaaa111111141111111111111111000000000007aaaaaaaa70000007aaaaaaaa70000007aaaaaaaa70000007aaaaaaaa70000007aaaaaaaa7000
a91111111111119a11111114111111111111111100000000007aa111111aa700007aa111111aa700007aa111111aa700007aa111111aa700007aa111111aa700
a11111111111111a11111119111111111111111100000000007a11111111a700007a11111111a700007a1111d111a700007a11111111a700007a11111111a700
a11111111111111a1111111911111111111111110001100007aa11111111aa7007aa11111111aa7007aa171d1111aa7007aa11111111aa7007aa11177111aa70
91111111111111191111111911111111111111110001200007a1111111111a7007a1111111111a7007a118d111111a7007a1118888111a7007a11177c33c1a70
9111111111111119111111191111111111111111000000007a111111111142a77a111198777711a77a11171d111111a77a111111118e11a77a11eeaacc7111a7
9111111111111119111111141111111111111111000000007a111111112422a77a11a98f777771a77a111711d11111a77a11111ee111e1a77a1177cccccc11a7
411111111111111411111114449999441111111100000000a24111114442242aa1cbff777777711aa11111111d17111aa11111e18811e11aa1177cccccccc11a
4111111111111114449999444111111100dddd0000000000942242441111122991cbff77777771199111111111d81119911111e81811e119911dddccccddd119
911111111111111911111111411111110d6677500000000049242211111111944911a98f777771944911111d1d171194491111188111e194491111cccc111194
91111111111111191111111191111111d66566750000000049421111111111944911119877771194491111ccd117119449111811118e1194491111cc88b81194
91111111111111191111111191111111d6755d65000000000491111111111940049111111111194004911ccccd111940049188888e111940049111dddd111940
a11111111111111a1111111191111111d755d765000000000499111111119940049911111111994004991cccc111994004991811111199400499111111119940
a11111111111111a1111111191111111d777d6650000000000491111111194000049111111119400004911cc1111940000491111111194000049111111119400
a91111111111119a1111111141111111057766500000000000499111111994000049911111199400004991111119940000499111111994000049911111199400
aaaa99944999aaaa1111111141111111005555000000000000049999999940000004999999994000000499999999400000049999999940000004999999994000
0007dddddddd70000007dddddddd70000007dddddddd70000007dddddddd70000007dddddddd70000007dddddddd70000007dddddddd70000007dddddddd7000
007dd111122dd700007dd555555dd700007dd111771dd700007dd111111dd700007dd111111dd700007dd111111dd700007dd111111dd700007dd111111dd700
007d11111822d700007d55555555d700007d11177771d700007d1111b111d700007d11111111d700007d11111111d700007d11111111d700007d11111111d700
07dd11111222dd7007dd55555555dd7007dd11188771dd7007dd1113bb11dd7007dd111dd111dd7007dd11111111dd7007ddcccccc11dd7007dd11bbbb11dd70
07d1999118222d7007d5565555655d7007d119777e811d7007d1111131111d7007d1115115111d7007d1111117771d7007d1cc777ccc1d7007d1bb7777bb1d70
7d197779188222d77d555857758555d77d111199977911d77d111188811111d77d111dddd55111d77d111b11117711d77dccc77cc1cc11d77d11b711117b11d7
7d197791982222d77d555667766555d77d11188ee99911d77db1888888bb11d77d111dd5555111d77d1111b1171711d77d1cc1cccdccc1d77d1b71111117b1d7
d11979799882222dd111666e8666111dd11188881e97711dd131888888bb111dd111dd55555d111dd11111b11711111ddc1ccdccccccc11dd11b71111177bb1d
511191979882222551116677776611155118882888e9991551121181bbbbbb155111d555555511155111111b7111111551dc7cc11cccd115511b71111177bb15
651111197822225665111677776111566512888888e999566512888833bbb35665115555555511566511111711111156651cccc1dcccd156651b71111117b156
65111197982222566511117777111156651288882889715665128111883b11566511555555551156651111eee111115665ddcccccccc11566511b71111111156
0651197998222560065111177111156006528888888775600651281888331560065111111111156006511ea5ae1115600651dccccccd15600651bb7777111560
06559791982255600655111111115560065528882217556006552288822155600655111111115560065518565e1155600655ccdccd115560065511bbbb115560
00657911122256000065111111115600006512222111560000651122211156000065111111115600006518959811560000651111111156000065111111115600
00655111122556000065511111155600006551111115560000655111111556000065511111155600006551888115560000655111111556000065511111155600
00065555555560000006555555556000000655555555600000065555555560000006555555556000000655555555600000065555555560000006555555556000
0007dddddddd70000007dddddddd70000007dddddddd70000007dddddddd70000007dddddddd70000007dddddddd7000000c00000cccccc0000cc00000c0cc00
007dd111111dd700007dd111111dd700007dd111111dd700007dd111111dd700007dd111111dd700007dd111111dd70000c7c000c777777c00c77c000c7c77c0
007d11119111d700007d11111111d700007d11111111d700007d11111111d700007d11111111d700007d11111111d70000c7c0000ccccc7c00c77c000c7c77c0
07dd11144111dd7007dd11111111dd7007dd11111111dd7007dd11cccc11dd7007dd11111111dd7007dd11111111dd7000c7c00000000c7c0cccccc00c7ccc00
07d1119999111d7007d1111111111d7007d1171111111d7007d1cc7777cc1d7007d1111111111d7007d1111111111d70000c7c000000c7c0c77cc77c0c7ccc00
7d119976769911d77d11111dddd111d77d11b111111111d77d11c711117c11d77d111cc11cc111d77d111a4444a111d70cccc7c00ccc7c00c77cc77c0c7c77c0
7d119677776911d77d11dddddddd11d77d1b111bb11111d77d1c71111117c1d77d1cc111111cc1d77d11a19aa91a11d7c777777cc777c0000cc00cc00c7c77c0
d11977777476911dd111dddddddd111dd11311bbbb11511dd11c71111117c11dd1c1111661111c1dd111919aa919111d0cccccc00ccc00000000000000c0cc00
5119677a977791155111ddddddddd115511511bbbb113115511c71111117c11551111165d61111155111199aa991111500010000011111100001100000111100
65194449a77691566511ddddddd551566511111bb111b156651c71111117c15665c1111661111c566511114994111156001c10001cccccc1001cc10001c1cc10
65196777777791566511ddd56655515665111111111b11566511c711117c1156651cc111111cc1566511111991111156001c1000011111c1001cc10001c1cc10
0651967777691560065155566665156006511111117115600651cc7777cc156006511cc11cc115600651114444111560001c1000000001c10111111001c11100
065599767699556006551555616155600655111111115560065511cccc115560065511111111556006551122221155600001c10000001c101cc11cc101c11100
00651199991156000065111166615600006511111111560000651111111156000065111111115600006511111111560001111c100111c1001cc11cc101c1cc10
0065511111155600006551111115560000655111111556000065511111155600006551111115560000655111111556001cccccc11ccc10000110011001c1cc10
00065555555560000006555555556000000655555555600000065555555560000006555555556000000655555555600001111110011100000000000000111100
__map__
48494c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4849a0b2b2b2a100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
58595c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5859b3a4a4a4a200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f4b5b54554b5b54554b5b54554b5b54554b5b54554b5b54554b5b54554e4fb3a4a4a4a200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5fb3a4a4a4a200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f444542434445424344454243444542435253424344454243444542434e4fb3a4a4a4a200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5fb3a4a4a4a200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f424344454243525342434445424344454243444542434445424344454e4fb0a3a3a3b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f444542434445424344454243444542434445424344454243444542434e4f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f424344454243444542434445424344454243444542435253424344454e4f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f525342434445424344454243444542434445424344454243444542434e4f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f424344454243525342434445424344454243444542434445424344454e4f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f444542434445424344454243444542434445424344454243525342434e4f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f424344454243444542434445424344454243444542434445424344454e4f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f444542434445424344454243444542435253424344454243444542434e4f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f424344454243444542435253424344454243444542434445424344454e4f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f525342434445424344454243444542434445424344454243444542434e4f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f424344454243444542434445424344454243444542435253424344454e4f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4e4f444542434445424344454243444542434445424344454243444542434e4f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5f444544454445444544454445444544454445444544454445444544455e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
48494c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4c4d4849000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
58595c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5c5d5859000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00010000016500a650236503d650376503365027650186501565013650106500c6500565001650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 00424344

